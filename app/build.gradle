plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
}

android {
    namespace 'com.example.xevivuapp'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.xevivuapp"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"
        manifestPlaceholders = [ MAP_KEY:getMapKey()]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        buildConfigField "String", "MAP_KEY", "\"" + getMapKey() + "\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
        viewBinding true
        dataBinding true
        buildConfig true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    apply {
        from("auto-dimensions.gradle")
    }
}

dependencies {

    implementation 'io.github.chaosleung:pinview:1.4.4'

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.activity:activity-compose:1.7.2'
    implementation platform('androidx.compose:compose-bom:2022.10.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.7.6'
    implementation 'androidx.navigation:navigation-ui-ktx:2.7.6'
    implementation 'com.google.firebase:firebase-auth:21.1.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    // Splash API
    implementation 'androidx.core:core-splashscreen:1.0.0-beta01'

    // Navigation Compose
    implementation("androidx.navigation:navigation-compose:2.6.0-alpha03")

    // Pager and Indicators - Accompanist
    implementation "com.google.accompanist:accompanist-pager:0.24.7-alpha"
    implementation "com.google.accompanist:accompanist-pager-indicators:0.24.7-alpha"

    // DataStore Preferences
    implementation("androidx.datastore:datastore-preferences:1.0.0")

    // Dagger - Hilt
    implementation 'com.google.dagger:hilt-android:2.47'
    kapt 'com.google.dagger:hilt-android-compiler:2.47'
    kapt "androidx.hilt:hilt-compiler:1.0.0"
    implementation 'androidx.hilt:hilt-navigation-compose:1.1.0-alpha01'

    // Firebase Auth
    implementation platform('com.google.firebase:firebase-bom:32.1.0')
    implementation 'com.google.android.play:integrity:1.3.0'

    // Google Maps
    implementation "com.google.android.gms:play-services-maps:18.2.0"
    implementation "com.google.android.libraries.places:places:3.3.0"

    // ssp, sdp compose
    implementation "com.intuit.ssp:ssp-android:1.0.6"
    implementation "com.intuit.sdp:sdp-android:1.1.0"

    // Volley to quick call api
    implementation "com.android.volley:volley:1.2.1"

    // Firestore
    implementation "com.google.firebase:firebase-firestore"
}

def getMapKey() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    String mapKey = properties.getProperty("map_key")
    if (mapKey == null)
        throw new GradleException("Add 'map_key' field at local.properties file")

    return mapKey
}
